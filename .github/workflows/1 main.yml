name: 1 main

on:
  #schedule:
    #- cron: '15 */1 * * *'  # 每1小时自动运行一次
  workflow_dispatch:  # 支持手动触发

jobs:
  update-nodes:
    runs-on: ubuntu-latest

    steps:
    # 检出当前仓库代码
    - name: Checkout current repository
      uses: actions/checkout@v3

    # 获取网页内容并保存为文件，去掉 HTML 标签
    - name: Fetch and Clean Webpage Content
      run: |
        # 通过 vars 引用变量
        VMESS_URL="${{ secrets.VMESS_URL }}"
        SS_URL="${{ secrets.SS_URL }}"
        
        # 获取网页内容，去掉 HTML 标签，并保存为纯文本文件
        curl -s "$VMESS_URL" | sed 's/<[^>]*>//g' > webpage_content.txt
        curl -s "$SS_URL" | sed 's/<[^>]*>//g' > ss_webpage_content.txt
        echo "Webpage content cleaned and saved."
        

    # 从保存的完整网页内容中提取并更新节点信息
    - name: Fetch and Update Nodes from Content Files
      run: |
        VMESS_NODES=$(grep -oP '.*vmess://\S+' webpage_content.txt | sed 's/^[[:space:]]*//;s/[[:space:]]*$//;s/&amp;/\&/g' | sort -u)
        VLESS_NODES=$(grep -oP '.*vless://\S+' webpage_content.txt | sed 's/^[[:space:]]*//;s/[[:space:]]*$//;s/&amp;/\&/g' | sort -u)
        SS_NODES=$(grep -oP '.*ss://\S+' ss_webpage_content.txt | sed 's/^[[:space:]]*//;s/[[:space:]]*$//;s/&amp;/\&/g' | sort -u)

        # 保存提取的节点链接到文件
        echo "$VMESS_NODES" > dizhi1.txt
        echo "$VLESS_NODES" > dizhi2.txt
        echo "$SS_NODES" > dizhi3.txt
        echo "Node data saved to files."

    # 检出目标仓库（通过 Secrets 传入）
    - name: Checkout target repository
      uses: actions/checkout@v3
      with:
        repository: ${{ secrets.TARGET_REPO }}  # 通过 Secrets 传入目标仓库名称
        token: ${{ secrets.TARGET_PAT }}  # 使用存储在 Secrets 中的 PAT
        path: target-repo  # 将目标仓库检出到 target-repo 目录

    # 将生成的文件复制到目标仓库
    - name: Copy files to target repository
      run: |
        cp dizhi1.txt dizhi2.txt dizhi3.txt ss_webpage_content.txt webpage_content.txt target-repo/${{ secrets.TARGET_FOLDER }}/
        echo "Files copied to target repository's folder."

    # 提交并推送到目标仓库
    - name: Commit and Push changes to target repository
      run: |
        cd target-repo
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git add .
        git commit -m "Update nodes data"
        git push origin main
